{"compress":true,"commitItems":[["b9758c96-c8c2-4ea1-aa69-93abf636315f",1589357624701,"## 一、重新认识Docker\n\n> 为什么要用容器？\n\n1. Docker基本使用\n\n   1) 基础概念\n\n   2) 理解容器镜像\n\n   3）创建应用容器并作资源限制\n\n   4）让外部访问容器应用\n\n2. Dockerfile\n\n   1) 企业容器镜像制作\n\n   2）Dockerfile编写\n\n   3）使用制作的镜像容器部署LNMP平台\n\n3. 企业级Harbor镜像仓库集中管理镜像\n\n4. 基于Docker构建企业Jenkins CI平台\n\n5. Promethues+Grafana监控Docker\n\n## 二、Kubernets概述\n\n> 有了Docker，为什么还要K8s?\n\n1. Kubernetes简介及其发展历史\n2. Kubernetes核心概念\n3. Kubernetes核心组件\n\n## 三、Kubernetes集群搭建与实践\n\n1. 企业容器平台架构设计\n2. 机器选型&资源规划\n3. 搭建生产级K8s高可用集群\n4. 使用kubeadm工具快速搭建K8s集群\n5. 常用插件部署：Flannel、Dashboard、CoreDNS\n\n## 四、Kubectl命令行管理工具\n\n1. kubectl常用命令及常用技巧\n2. kubectl工具管理应用程序\n3. kubectl工具远程链接K8s集群\n\n## 五、资源编排\n\n1. YAML文件格式说明\n2. YAML文件创建资源对象\n\n## 六、深入理解Pod对象\n\n1. Pod存在的意义与设计模式\n2. 镜像拉取策略\n3. 资源限制\n4. 重启策略\n5. 健康检查\n6. 调度策略\n7. 故障排查\n\n## 七、深入理解常用控制器\n\n1. 无状态应用部署：Deplyment（升级、回滚、扩容）\n2. 容器化守护进程的意义：DaemonSet\n3. 撬动离线业务：Job与CronJob\n\n## 八、深入理解Service（统一访问入口）\n\n1. Service存在的意义\n2. Service三种类型\n3. Service代理模式只Iptables工作原理\n4. Service代理模式只IPVS工作原理\n5. Iptables和IPVS选择及优缺点\n6. Service DNS名称访问：CoreDNS\n\n## 九、Ingress（从外部访问应用最佳方式）\n\n1. Ingres介绍\n2. 部署Ingress Controller（Nginx）\n3. 使用Ingress发布HTTP/HTTPS网站\n4. 通过Annotations对Ingress做定制化配置\n5. Ingress Controller高可用方案\n\n## 十、管理应用程序配置\n\n1. Secret\n2. Configmap\n3. 容器应用配置资源的两种方式及应用案例\n\n## 十一、Pod数据持久化（数据卷与数据持久化卷）\n\n1. 数据卷描述\n2. 临时存储卷，节点存储卷，网络存储卷\n3. PV 与 PVC的关系\n4. PV生命周期\n5. PV静态供给\n6. PV动态供给（StorageClass）\n\n## 十二、再谈有状态应用部署\n\n1. Headless Service\n2. StatefulSet控制器\n3. 使用StatefulSet部署有状态应用\n4. 有状态应用身份之网络ID\n5. 有状态应用身份之存储\n\n## 十三章、Kubernets鉴权框架与用户权限分配\n\n1. Kubernetes 安全框架\n2. API访问过三关：认证、授权、准入控制\n3. 基于角色的权限访问控制：RBAC\n\n## 十四章、使用Promethues全方位监控K8S\n\n1. Kubernetes监控指标及实现思路\n2. 在Kubernetes平台部署Promethues\n3. 基于Kubernetes服务发现的配置解析\n4. 在Kubernetes平台部署Grafana\n5. 监控Kubernetes集群中的Pod、Node、资源对象等资源\n6. 使用Grafana可视化展示Promethues监控数据\n7. 在Kubernets平台部署Alertmanager\n8. 监控告警规则及告警通知\n\n## 十五、使用EKL Stack手机Kubernetes平台日志\n\n1. K8s平台日志采集三种方案\n2. ELK Stack日志平台部署\n3. 容器日志标准输出、日志文件采集方式\n4. Kubernetes组件日志收集\n5. Kubernetes平台Pod中应用日志收集\n\n## 十六、基于Kubernetes构建企业Jenkins CI.CD平台\n\n1. 发部流程设计及注意事项\n2. 使用Gitlab作为代码仓库及使用Harbor作为镜像仓库\n3. 在Kubernetes中部署Jenkins\n4. Jenkins Pipeline基本使用\n5. Jenkins Pipeline参数化构建\n6. Jenkins在Kubernetes中动态创建代理\n7. 定制Jenkins Slave镜像\n8. Jenkins Pipeline构建流水线发布\n9. Jenkins在Kubernetes中持续部署\n\n",[[1589357599601,["George@Google",[[-1,43,"\n"]],[43,43],[42,42]]],[1589357600135,["George@Google",[[-1,54,"\n"]],[54,54],[53,53]]],[1589357601075,["George@Google",[[-1,67,"\n"]],[67,67],[66,66]]],[1589357601660,["George@Google",[[-1,85,"\n"]],[85,85],[84,84]]],[1589357602509,["George@Google",[[-1,100,"\n"]],[100,100],[99,99]]],[1589357603403,["George@Google",[[-1,114,"\n"]],[114,114],[113,113]]],[1589357603940,["George@Google",[[-1,129,"\n"]],[129,129],[128,128]]],[1589357604775,["George@Google",[[-1,147,"\n"]],[147,147],[146,146]]],[1589357605780,["George@Google",[[-1,170,"\n"]],[170,170],[169,169]]],[1589357606410,["George@Google",[[-1,193,"\n"]],[193,193],[192,192]]],[1589357607046,["George@Google",[[-1,221,"\n"]],[221,221],[220,220]]]],null,"George@Google"]]}